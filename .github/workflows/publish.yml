name: Publish to marketplaces

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    name: Package and Publish Extension
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Compile TypeScript
        run: npm run compile

      - name: Run tests
        run: npm run test:unit
        env:
          CI: true

      - name: Install vsce and ovsx
        run: |
          npm install -g @vscode/vsce
          npm install -g ovsx

      - name: Extract version from tag
        if: github.event_name == 'release'
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update package.json version
        if: github.event_name == 'release'
        run: |
          npm version ${{ steps.extract_version.outputs.VERSION }} --no-git-tag-version
          echo "Updated package.json to version ${{ steps.extract_version.outputs.VERSION }}"

      - name: Package extension
        run: npm run package

      - name: Publish to VS Code Marketplace
        run: vsce publish --no-dependencies
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Publish to Open VSX
        run: ovsx publish --no-dependencies
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}
        continue-on-error: true

      - name: Upload VSIX as artifact
        uses: actions/upload-artifact@v4
        with:
          name: s3x-explorer-extension
          path: "*.vsix"
          retention-days: 30

      - name: Attach VSIX to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./s3x-explorer-${{ steps.extract_version.outputs.VERSION }}.vsix
          asset_name: s3x-explorer-${{ steps.extract_version.outputs.VERSION }}.vsix
          asset_content_type: application/zip
