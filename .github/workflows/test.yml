name: Test S3/R2 Explorer Extension

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run tests daily at 6 AM UTC to catch any API changes
    - cron: "0 6 * * *"

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node.js ${{ matrix.node }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [16, 18, 20]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "npm"

      - name: Install dependencies
        run: npm install --force

      - name: Lint code
        run: npm run lint

      - name: Compile TypeScript
        run: npm run compile

      - name: Run unit tests (without R2 connection)
        run: npm run test:unit
        env:
          # Don't set R2 credentials for unit tests
          CI: true

      - name: Run integration tests (with R2)
        if: matrix.os == 'ubuntu-latest' && matrix.node == '18'
        run: npm test
        env:
          CI: true
          S3X_ENDPOINT_URL: ${{ secrets.S3X_ENDPOINT_URL }}
          S3X_ACCESS_KEY_ID: ${{ secrets.S3X_ACCESS_KEY_ID }}
          S3X_SECRET_ACCESS_KEY: ${{ secrets.S3X_SECRET_ACCESS_KEY }}
          S3X_REGION: "us-east-1"
          # Use Xvfb for headless testing on Linux
          DISPLAY: ":99.0"

      - name: Setup Xvfb (Linux only)
        if: matrix.os == 'ubuntu-latest' && matrix.node == '18'
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          export DISPLAY=:99.0
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-node${{ matrix.node }}
          path: |
            out/
            *.log
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install --force

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: npx audit-ci --moderate

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install --force

      - name: Run tests with coverage
        run: |
          npm run compile
          npx nyc --reporter=lcov --reporter=text npm run test:unit
        env:
          CI: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  smoke-test:
    name: R2 Smoke Test
    runs-on: ubuntu-latest
    # Only run smoke test if we have credentials
    if: secrets.S3X_ENDPOINT_URL != ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install --force

      - name: Setup Xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          export DISPLAY=:99.0
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Compile and run smoke test
        run: |
          npm run compile
          timeout 300 npm test || echo "Test completed or timed out"
        env:
          CI: true
          S3X_ENDPOINT_URL: ${{ secrets.S3X_ENDPOINT_URL }}
          S3X_ACCESS_KEY_ID: ${{ secrets.S3X_ACCESS_KEY_ID }}
          S3X_SECRET_ACCESS_KEY: ${{ secrets.S3X_SECRET_ACCESS_KEY }}
          S3X_REGION: "us-east-1"
          DISPLAY: ":99.0"

      - name: Report smoke test result
        run: echo "Smoke test completed. Check logs for detailed results."

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, security-scan, coverage, smoke-test]
    if: always()

    steps:
      - name: Notify success
        if: needs.test.result == 'success' && needs.security-scan.result == 'success'
        run: |
          echo "✅ All tests passed successfully!"
          echo "- Unit tests: ✅ Passed"
          echo "- Integration tests: ✅ Passed" 
          echo "- Security scan: ✅ Passed"
          echo "- Code coverage: ✅ Generated"
          if [[ "${{ needs.smoke-test.result }}" == "success" ]]; then
            echo "- R2 smoke test: ✅ Passed"
          else
            echo "- R2 smoke test: ⚠️ Skipped (no credentials)"
          fi

      - name: Notify failure
        if: needs.test.result == 'failure' || needs.security-scan.result == 'failure'
        run: |
          echo "❌ Some tests failed!"
          echo "- Unit tests: ${{ needs.test.result == 'success' && '✅' || '❌' }}"
          echo "- Integration tests: ${{ needs.test.result == 'success' && '✅' || '❌' }}"
          echo "- Security scan: ${{ needs.security-scan.result == 'success' && '✅' || '❌' }}"
          echo "Please check the workflow logs for details."
          exit 1
